class SearchService{static instance=null;constructor(){return SearchService.instance||(this.queryText=null,this.data=null,this.searchHistory=[],this.maxHistoryCount=5,this.isComposing=!1,this.debouncedInputHandler=this.debounce((e=>{this.isComposing||this.onSubmit(e)}),300),this.hitsEmpty="未找到与「${query}」相关的内容",this.hitsFound="找到 ${totalResults} 个相关结果",this.normalText="搜索文章、标签或分类...",this.loadDataText="正在加载数据...",this.searchingText="搜索中...",this.searchHistoryText="搜索历史",this.noSearchHistoryText="暂无搜索历史",this.normal=`<div class="result-hits-empty"><p>${this.normalText}🔍</p></div>`,this.template=`\n        <div class="modal">\n          <header class="modal-header clearfix">\n            <form id="u-search-modal-form" class="u-search-form" name="uSearchModalForm">\n              <input type="text" id="u-search-modal-input" class="u-search-input" placeholder="${this.normalText}" autocomplete="off" />\n              <button type="submit" id="u-search-modal-btn-submit" class="u-search-btn-submit">\n                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                  <circle cx="11" cy="11" r="8"></circle>\n                  <line x1="21" y1="21" x2="16.65" y2="16.65"></line>\n                </svg>\n              </button>\n            </form>\n            <a id="u-search-btn-close" class="btn-close">\n              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                <line x1="18" y1="6" x2="6" y2="18"></line>\n                <line x1="6" y1="6" x2="18" y2="18"></line>\n              </svg>\n            </a>\n          </header>\n          <div class="search-filters">\n            <button class="filter-btn active" data-filter="all">全部</button>\n            <button class="filter-btn" data-filter="posts">文章</button>\n            <button class="filter-btn" data-filter="pages">页面</button>\n            <button class="filter-btn" data-filter="tags">标签</button>\n          </div>\n          <main class="modal-body">\n            <div class="search-stats hidden"></div>\n            <ul class="modal-results"></ul>\n            <div class="search-history hidden">\n              <h3>${this.searchHistoryText}</h3>\n              <button class="clear-history">清除历史</button>\n              <ul class="history-list"></ul>\n            </div>\n            <div class="search-loading hidden">\n              <div class="spinner"></div>\n              <p>${this.loadDataText}</p>\n            </div>\n          </main>\n        </div>\n        <div id="modal-overlay" class="modal-overlay"></div>`,this.initInstance(),SearchService.instance=this),SearchService.instance}static init(){SearchService.instance||new SearchService}initInstance(){if(!document.querySelector("#u-search")){const e=document.createElement("div");e.id="u-search",e.innerHTML=this.template,document.body.append(e)}this.bindEvents(),this.loadSearchHistory(),this.updateHistoryDisplay(),this.updateDarkModeClass(),this.setupDarkModeListener()}setupDarkModeListener(){window.addEventListener("darkModeChanged",(()=>{this.updateDarkModeClass()}))}updateDarkModeClass(){const e=document.querySelector("#u-search");if(!e)return;const t=localStorage.getItem("color-scheme"),s=window.matchMedia("(prefers-color-scheme: dark)").matches;(t?"dark"===t:s)?e.classList.add("dark"):e.classList.remove("dark")}bindEvents(){const e=document.querySelector("#u-search-modal-input");e.hasAttribute("data-event-bound")||(e.setAttribute("data-event-bound","true"),e.addEventListener("compositionstart",(()=>this.isComposing=!0)),e.addEventListener("compositionend",(e=>{this.isComposing=!1,this.onSubmit(e)})),e.addEventListener("input",this.debouncedInputHandler.bind(this)),document.querySelectorAll(".u-search-form").forEach((e=>{e.addEventListener("submit",this.onSubmit.bind(this))})),document.querySelector("#u-search-btn-close").addEventListener("click",this.close.bind(this)),document.querySelector("#modal-overlay").addEventListener("click",this.close.bind(this)),document.querySelectorAll(".filter-btn").forEach((e=>{e.addEventListener("click",(e=>{document.querySelectorAll(".filter-btn").forEach((e=>e.classList.remove("active"))),e.target.classList.add("active"),this.onSubmit({preventDefault:()=>{},target:document.querySelector("#u-search-modal-form")})}))})),document.querySelector(".clear-history").addEventListener("click",(()=>{this.clearSearchHistory()})),document.querySelector(".history-list").addEventListener("click",(t=>{"LI"===t.target.tagName&&(e.value=t.target.textContent,this.onSubmit({preventDefault:()=>{},target:document.querySelector("#u-search-modal-form")}))})))}async onSubmit(e){e.preventDefault();const t=e.target.querySelector(".u-search-input")||e.target;this.queryText=t.value.trim(),await this.search()}async search(){const e=document.querySelectorAll(".u-search-input"),t=document.querySelector("#u-search"),s=document.querySelector("#modal-overlay"),i=document.querySelector("#u-search .modal-results"),r=document.querySelector("#u-search .modal"),n=document.querySelector(".search-stats"),a=document.querySelector(".search-loading"),o=a.querySelector("p"),l=document.querySelector(".search-history"),c=document.querySelector(".filter-btn.active").dataset.filter;e.forEach((e=>e.value=this.queryText)),t.style.display="block",s.style.backdropFilter="blur(10px)",setTimeout((()=>{r.style.transform="translate(0px, 0px)"}),100),i.innerHTML="",i.style.flex="",n.classList.add("hidden"),a.classList.remove("hidden"),l.classList.add("hidden"),this.data?o.textContent=this.searchingText:(o.textContent=this.loadDataText,this.data=await this.fetchData()),setTimeout((async()=>{let e="",s=0;if("all"===c||"posts"===c){const t=this.buildResultList(this.data.posts,"post");e+=t.html,s+=t.count}if("all"===c||"pages"===c){const t=this.buildResultList(this.data.pages,"page");e+=t.html,s+=t.count}if("all"===c||"tags"===c){const t=this.buildTagResults();e+=t.html,s+=t.count}a.classList.add("hidden"),e?(n.textContent=this.hitsFound.replace(/\$\{totalResults}/,s),n.classList.remove("hidden"),this.queryText&&this.queryText.length>0&&this.addToSearchHistory(this.queryText)):(i.style.flex=1,e=`<div class="result-hits-empty no-results">\n          <i class="fa-solid fa-search"></i>\n          <p>${this.hitsEmpty.replace(/\$\{query}/,this.queryText)}</p>\n        </div>`,n.classList.add("hidden")),""===this.queryText&&(e=this.normal,n.classList.add("hidden"),l.classList.remove("hidden"),this.updateHistoryDisplay()),i.innerHTML=e,window.pjax&&pjax.refresh(t);const r=e=>{"Escape"===e.code&&(this.close(),document.removeEventListener("keydown",r))};document.addEventListener("keydown",r)}),300)}close(){const e=document.querySelector("#u-search .modal"),t=document.querySelector("#u-search"),s=document.querySelector("#modal-overlay");e.style.transform="translateY(120%)",setTimeout((()=>{t.style.display="none",s.style.backdropFilter="blur(0)"}),300)}async fetchData(){try{const e=await fetch(volantis.GLOBAL_CONFIG.search.dataPath);return await e.json()}catch(e){return console.error("Error fetching search data:",e),null}}buildResultList(e,t){if(!e||!this.queryText)return{html:"",count:0};const s=e.sort(((e,t)=>new Date(t.updated)-new Date(e.updated)));let i="",r=0;if(s.forEach((e=>{this.contentSearch(e)&&(i+=this.buildResult(e,t),r++)})),i&&r>0){i=`<li class="result-group"><h3>${"post"===t?"文章":"页面"} (${r})</h3></li>`+i}return{html:i,count:r}}buildTagResults(){if(!this.data.tags||!this.queryText)return{html:"",count:0};const e=this.queryText.toLowerCase();let t="",s=0;return this.data.tags.forEach((i=>{i.name.toLowerCase().includes(e)&&(t+=`\n          <li class="tag-result">\n            <a href="${i.permalink}">\n              <span class="tag-icon">\n                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true" stroke="currentColor">\n                  <line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>\n                </svg>\n              </span>\n              <span class="tag-name">${this.highlightMatch(i.name)}</span>\n            </a>\n          </li>\n        `,s++)})),t&&s>0&&(t=`<li class="result-group"><h3>标签 (${s})</h3></li><ul class="result-tags-list">${t}</ul>`),{html:t,count:s}}contentSearch(e){if(!this.queryText)return!1;const t=this.queryText.toLowerCase().split(/[-\s]+/),s=e?.title?.toLowerCase()||"",i=e?.content?.toLowerCase()||"",r=e?.description?.toLowerCase()||"",n=e?.tags?.map((e=>e.name.toLowerCase())).join(" ")||"";if(!t.some((e=>s.includes(e)||i.includes(e)||r.includes(e)||n.includes(e))))return!1;const a=i||r||s,o=t.reduce(((e,t)=>{const s=a.indexOf(t);return-1!==s&&s<e?s:e}),a.length),l=Math.max(o-40,0),c=Math.min(o+120,a.length),h=this.stripHTML(a).slice(l,c).replace(new RegExp(`(${t.join("|")})`,"gi"),"<mark>$1</mark>");return e.digest=`${h}......`,!0}buildResult(e,t){const s=new URL(e.permalink).pathname.split("?")[0],i=new Date(e.updated||e.date),r=`${i.getFullYear()}-${(i.getMonth()+1).toString().padStart(2,"0")}-${i.getDate().toString().padStart(2,"0")}`;let n="";e.tags&&e.tags.length>0&&(n=`<div class="tags">\n        ${e.tags.map((e=>`<a href="${e.permalink}" class="tag">\n          <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true" stroke="currentColor">\n            <line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>\n          </svg>\n          ${this.highlightMatch(e.name)}\n        </a>`)).join("")}\n      </div>`);let a="";e.categories&&e.categories.length>0&&(a=`<div class="category">\n        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n          <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>\n        </svg>\n        ${e.categories.map((e=>`<a href="${e.permalink}">${e.name}</a>`)).join("")}\n      </div>`);let o="";return e.headimg&&(o=`<div class="result-image">\n        <img src="${e.headimg}" alt="${e.title}">\n      </div>`),`\n      <li class="result-item ${t}-result">\n        <a class="result-link" href="${s}?keyword=${encodeURIComponent(this.queryText)}">\n          ${o}\n          <div class="result-content">\n            <h3 class="title">${this.highlightMatch(e.title)}</h3>\n            <div class="meta">\n              <span class="date">${r}</span>\n              ${a}\n            </div>\n            ${n}\n            ${e.digest?`<p class="digest">${e.digest}</p>`:""}\n          </div>\n        </a>\n      </li>\n    `}highlightMatch(e){if(!this.queryText)return e;const t=this.queryText.toLowerCase().split(/[-\s]+/);if(!t.length)return e;const s=new RegExp(`(${t.join("|")})`,"gi");return e.replace(s,"<mark>$1</mark>")}stripHTML(e){return e.replace(/\n+/g," ").replace(/<(img|figure)[^>]*>.*?<\/\1>/g,"").replace(/<[^>]+>/g,"").trim().replace(/\s+/g," ").replace(/(\S)(https:\/\/)/g,"$1 $2")}addToSearchHistory(e){this.searchHistory=[e,...this.searchHistory.filter((t=>t.toLowerCase()!==e.toLowerCase()))].slice(0,this.maxHistoryCount),localStorage.setItem("searchHistory",JSON.stringify(this.searchHistory)),this.updateHistoryDisplay()}loadSearchHistory(){const e=localStorage.getItem("searchHistory");if(e)try{this.searchHistory=JSON.parse(e)}catch(e){console.error("Failed to parse search history from localStorage:",e),this.searchHistory=[]}}updateHistoryDisplay(){const e=document.querySelector(".search-history"),t=document.querySelector(".history-list");if(t){if(0===this.searchHistory.length)return t.innerHTML=`<p class="no-history">${this.noSearchHistoryText}</p>`,void e.classList.add("hidden");t.innerHTML=this.searchHistory.map(((e,t)=>`<li>${e}\n        <button class="remove-history" data-index="${t}">\n          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n            <line x1="18" y1="6" x2="6" y2="18"></line>\n            <line x1="6" y1="6" x2="18" y2="18"></line>\n          </svg>\n        </button>\n      </li>`)).join(""),document.querySelectorAll(".remove-history").forEach((e=>{e.addEventListener("click",(e=>{e.stopPropagation();const t=parseInt(e.target.closest(".remove-history").dataset.index);this.searchHistory.splice(t,1),localStorage.setItem("searchHistory",JSON.stringify(this.searchHistory)),this.updateHistoryDisplay()}))}))}}clearSearchHistory(){this.searchHistory=[],localStorage.removeItem("searchHistory"),this.updateHistoryDisplay()}debounce(e,t){let s=null;return function(...i){clearTimeout(s),s=setTimeout((()=>{e.apply(this,i)}),t)}}static setQueryText(e){SearchService.init(),SearchService.instance.queryText=e}static async search(){SearchService.init(),await SearchService.instance.search()}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>new SearchService)):new SearchService,document.addEventListener("pjax:success",(()=>new SearchService)),document.addEventListener("pjax:send",(()=>{const e=document.querySelector("#u-search");e&&(e.style.display="none")}));